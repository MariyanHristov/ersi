def encrypt_message(type):
    return lambda to_decorate : (lambda *args, **kwargs : {'ROT-13': ''.join(dict(zip(''.join([chr(letter) for letter in range(ord('a'), ord('z') + 1)][26::1] + [chr(letter) for letter in range(ord('a'), ord('z') + 1)][:26:1] + [chr(letter).upper() for letter in range(ord('a'), ord('z') + 1)][26::1] + [chr(letter).upper() for letter in range(ord('a'), ord('z') + 1)][:26:1]), ''.join([chr(letter) for letter in range(ord('a'), ord('z') + 1)][13::1] + [chr(letter) for letter in range(ord('a'), ord('z') + 1)][:13:1] + [chr(letter).upper() for letter in range(ord('a'), ord('z') + 1)][13::1] + [chr(letter).upper() for letter in range(ord('a'), ord('z') + 1)][:13:1]))).get(char, char) for char in to_decorate(*args,**kwargs)), 'ATBASH': ''.join(dict(zip(''.join([chr(letter) for letter in range(ord('a'), ord('z') + 1)][26::1] + [chr(letter) for letter in range(ord('a'), ord('z') + 1)][:26:1] + [chr(letter).upper() for letter in range(ord('a'), ord('z') + 1)][26::1] + [chr(letter).upper() for letter in range(ord('a'), ord('z') + 1)][:26:1]), ''.join([chr(letter) for letter in range(ord('a'), ord('z') + 1)][-1::-1] + [chr(letter) for letter in range(ord('a'), ord('z') + 1)][:-1:-1] + [chr(letter).upper() for letter in range(ord('a'), ord('z') + 1)][-1::-1] + [chr(letter).upper() for letter in range(ord('a'), ord('z') + 1)][:-1:-1]))).get(char, char) for char in to_decorate(*args,**kwargs)), 'FN-XOR': ''.join([chr(ord(char) ^ ord('7MI0600042'[i % len('7MI0600042')])) for i, char in enumerate(to_decorate(*args,**kwargs))])}[type])